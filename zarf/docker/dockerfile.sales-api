# Build the Go Binary.
FROM golang:1.15.2 as build_sales-api
ENV CGO_ENABLED 0
ARG VCS_REF

# Create a location in the container for the source code. Using the
# default GOPATH location.
RUN mkdir -p /service

# Copy the module files first and then download the dependencies. If this
# doesn't change, we won't need to do this again in future builds.
# COPY go.* /service/
# WORKDIR /service
# RUN go mod download

# Copy the source code into the container.
WORKDIR /service
COPY . .

# Build the admin tool so we can have it in the container. This should not change
# often so do this first.
WORKDIR /service/app/sales-admin
RUN go build -ldflags "-X main.build=${VCS_REF}"

# Build the service binary. We are doing this last since this will be different
# every time we run through this process.
WORKDIR /service/app/sales-api
RUN go build -ldflags "-X main.build=${VCS_REF}"


# Run the Go Binary in Alpine.
FROM alpine:3.12
ARG BUILD_DATE
ARG VCS_REF
COPY --from=build_sales-api /service/private.pem /service/private.pem
COPY --from=build_sales-api /service/app/sales-admin/sales-admin /service/admin
COPY --from=build_sales-api /service/app/sales-api/sales-api /service/sales-api
WORKDIR /service
CMD ["./sales-api"]

LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="sales-api" \
      org.opencontainers.image.authors="William Kennedy <bill@ardanlabs.com>" \
      org.opencontainers.image.source="https://github.com/ardanlabs/service/app/sales-api" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="Ardan Labs"